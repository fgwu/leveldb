#include <math.h>
#include <stdio.h>
#include "port/port.h"
#include "util/amp_stats.h"

namespace leveldb {

AmpStats::AmpStats() {
  read_lat_mem_ = 0;
  read_lat_mem_cnt_ = 0;
  read_lat_imm_ = 0;
  read_lat_imm_cnt_ = 0;
  read_lat_tbl_ = 0;
  read_lat_tbl_cnt_ = 0;
  fprintf(stdout, "AmpStats init\n");
}

AmpStats::~AmpStats() {
  fprintf(stdout, "AmpStats destroy\n");
}

std::string AmpStats::ToString() const {
  std::string s = "";
  char buf[200];
  snprintf(buf, sizeof(buf), "AmpStats:\nRead Lat Mem Avg: %.3f Cnt: %ld\n",
	   read_lat_mem_/read_lat_mem_cnt_,
	   read_lat_mem_cnt_);
  s.append(buf);
  snprintf(buf, sizeof(buf), "Read Lat Imm Avg: %.3f Cnt: %ld\n",
	   read_lat_imm_/read_lat_imm_cnt_,
	   read_lat_imm_cnt_);
  s.append(buf);
  snprintf(buf, sizeof(buf), "Read Lat Tbl Avg: %.3f Cnt: %ld\n",
	   read_lat_tbl_/read_lat_tbl_cnt_,
	   read_lat_tbl_cnt_);
  s.append(buf);

  return s;
}

void AmpStats::Add(AmpStats::Type t, double micros) {
  switch(t) {
  case kMem:
    read_lat_mem_ += micros;
    read_lat_mem_cnt_++;
    break;
  case kImm:
    read_lat_imm_ += micros;
    read_lat_imm_cnt_++;
    break;
  case kTbl:
    read_lat_tbl_ += micros;
    read_lat_tbl_cnt_++;
    break;
  }
}

}  // namespace leveldb
